{
  "name": "Andrew's Workflow",
  "nodes": [
    {
      "parameters": {
        "url": "https://developers.events/feed-events.json",
        "options": {}
      },
      "id": "2c5944c2-58d7-4840-be92-4db24165f7bf",
      "name": "Fetch developers.events",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1360,
        760
      ],
      "notesInFlow": true,
      "notes": "{\n   \"search_query\": \"string\"\n}"
    },
    {
      "parameters": {
        "fieldToSplitOut": "items",
        "options": {}
      },
      "id": "bb833c0c-607b-4c58-886f-9f71636bab7f",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1540,
        1000
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "e51e76e5-2fc6-4c01-9c94-b3ae6a80607a",
              "leftValue": "={{ $json.title.toLowerCase() }}",
              "rightValue": "={{ $('Mattermost slash command').all()[0].json.body.search_query.toLowerCase() }}",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "57d7789f-7599-40f6-8349-f0a903e61a29",
      "name": "Filter",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2,
      "position": [
        1780,
        780
      ]
    },
    {
      "parameters": {
        "content": "## This workflow... \nUses the provided text from a Mattermost slash command to fetch and filter events from developers.events to find matching results, which are then formatted and posted back to the channel.\n\n## Some ideas for improving it...\n- Filter out past events\n- Use [Mattermost message attachments](https://developers.mattermost.com/integrate/reference/message-attachments/) to create a prettier and more interactive response \n\n## Related\n- üóÉÔ∏è [Demo repo](https://github.com/azigler/chatops-plus-ai-demo)\n- üìë [Presentation](https://docs.google.com/presentation/d/1ESDH2glJlAMM3LUcZHTrw18BMH8jVMl3q-lx0fQ1_y0/edit?usp=sharing)",
        "height": 369,
        "width": 408,
        "color": 5
      },
      "id": "b498f81b-4f10-4a06-86e3-d6d5473a9617",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        880,
        560
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\n\n// let msg = `I located the following events on [developers.events](https://developers.events) matching your query: \\`${$('Mattermost slash command').all()[0].json.query.text}\\`:\n// `\n\n// for (const item of $input.all()) {\n//   msg += `\n//   - [${item.json.content_html}](${item.json.url})`\n// }\n\n// console.log(msg)\n\nreturn {status: \"success\", assistant_hint: \"The result key contains a list of objects that match the query the user asked for. Display each event to the user - use your discretion to decide which fields are important to display. You can use Markdown to format your response to the user. If the user requested a specific format from you, respect it.\", \"result\": $input.all()}"
      },
      "id": "f650d5f5-8e84-4977-a295-3c4944c3649c",
      "name": "Write AI Copilot response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1980,
        980
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "18c9ec6e-a19c-4726-8181-47c987fbdc10",
        "responseMode": "lastNode",
        "options": {}
      },
      "id": "e4a4ced6-5293-4b0c-8ea0-23d47d070823",
      "name": "Mattermost slash command",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [
        1160,
        940
      ],
      "webhookId": "18c9ec6e-a19c-4726-8181-47c987fbdc10",
      "notesInFlow": true,
      "notes": "This function allows you to search through a calendar containing various developer events based on a search query you can grab from the user's input."
    }
  ],
  "pinData": {},
  "connections": {
    "Fetch developers.events": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Write AI Copilot response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mattermost slash command": {
      "main": [
        [
          {
            "node": "Fetch developers.events",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "935533ce-6a33-473c-82b5-713f4f1c477c",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "bb7d260d3028bdb8320cc16b5d785d8bccd3e01bf131e5abc68304f571ba8d97"
  },
  "id": "OQpvRomSCrM3Fgcy",
  "tags": []
}