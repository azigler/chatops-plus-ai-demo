{
  "name": "Fetch data from developers.event, summarize with AI, and post to Mattermost",
  "nodes": [
    {
      "parameters": {
        "url": "https://developers.events/feed-events.json",
        "options": {}
      },
      "id": "422c9d62-8c98-4f1e-939e-13996430a286",
      "name": "Fetch developers.events",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1100, 240]
    },
    {
      "parameters": {
        "path": "18c9ec6e-a19c-4726-8181-47c987fbdc10",
        "responseMode": "lastNode",
        "options": {}
      },
      "id": "c44d2750-e53f-4671-8bc8-7d73ed214959",
      "name": "Mattermost slash command",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [900, 420],
      "webhookId": "18c9ec6e-a19c-4726-8181-47c987fbdc10"
    },
    {
      "parameters": {
        "fieldToSplitOut": "items",
        "options": {}
      },
      "id": "551ba250-f2e8-4e7a-a81b-5d12213379f5",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [1280, 480]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "e51e76e5-2fc6-4c01-9c94-b3ae6a80607a",
              "leftValue": "={{ $json.title.toLowerCase() }}",
              "rightValue": "={{ $('Mattermost slash command').all()[0].json.query.text }}",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "27eebc0a-dc58-4242-a572-f88b4367c080",
      "name": "Filter",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2,
      "position": [1520, 260]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\n\nlet msg = `I located the following events on [developers.events](https://developers.events) matching your query: \\`${$('Mattermost slash command').all()[0].json.query.text}\\`:\n`\n\nfor (const item of $input.all()) {\n  msg += `\n  - [${item.json.content_html}](${item.json.url})`\n}\n\nconsole.log(msg)\n\nreturn {\"response_type\": \"in_channel\", \"text\": msg}"
      },
      "id": "a97a9926-3d14-47b7-a433-6422a50c568d",
      "name": "Write channel message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1720, 460]
    },
    {
      "parameters": {
        "content": "## This workflow... \nUses the provided text from a Mattermost slash command to fetch and filter events from developers.events to find matching results, which are then formatted and posted back to the channel.\n\n## Some ideas for improving it...\n- Filter out past events\n- Use [Mattermost message attachments](https://developers.mattermost.com/integrate/reference/message-attachments/) to create a prettier and more interactive response \n\n## Related\n- üóÉÔ∏è [Demo repo](https://github.com/azigler/chatops-plus-ai-demo)\n- üìë [Presentation](https://docs.google.com/presentation/d/1ESDH2glJlAMM3LUcZHTrw18BMH8jVMl3q-lx0fQ1_y0/edit?usp=sharing)",
        "height": 369,
        "width": 408,
        "color": 5
      },
      "id": "62f14701-0d72-4469-9a03-e9597879e516",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [620, 40]
    }
  ],
  "pinData": {},
  "connections": {
    "Fetch developers.events": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mattermost slash command": {
      "main": [
        [
          {
            "node": "Fetch developers.events",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Write channel message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "07354159-0458-4015-b2a9-2283a86c7735",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "14e17ce724d69bea7f64a252f8cb2bf918ca40dd010b91699613584eb01c2017"
  },
  "id": "adi42U7dIV7b20X1",
  "tags": []
}
